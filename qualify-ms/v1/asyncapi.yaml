asyncapi: '2.0.0'
info:
  version: '1.0.0'
  title: qualify-ms
  description: This is an example how to implement a document specification using Async API.
  contact:
    name: Sensedia Impact
    url: https://sensedia.com
    email: leonardo.americo@sensedia.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
defaultContentType: application/json
servers:
  dev:
    url: localhost:9092
    protocol: kafka
    protocolVersion: '1.0.0'
    description: Basic usage at localhost kafka
    security:
      - user-password: []

channels:
  order-ms/sub-order-submitted:
    subscribe:
      operationId: subscribeOrderSubmitted
      message:
        $ref: '#/components/messages/OrderSubmitted'
  qualify-ms/tp-order-qualified:
    publish:
      operationId: publishOrderQualified
      message:
        $ref: '#/components/messages/OrderQualified'
components:
  securitySchemes:
    user-password:
      type: userPassword
  schemas:
    ItemSchema:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: transaction id
        quantity:
          type: integer
          format: int32
          description: quantity of item
          example: 2
        amount:
          type: number
          format: double
          description: amount in cents
          example: 100
        timestamp:
          type: string
          format: date-time
          description: current timestamp
    AddressSchema:
      type: object
      properties:
        zipcode:
          type: string
          description: zipcode
          maxLength: 10
          example: 93922000
        address:
          type: string
          description: Delivery addresss
          example: Acme avenue
        number:
          type: string
          description: Number
          maxLength: 200
          example: 123
        neighborhood:
          type: string
          description: Neighborhood
          maxLength: 200
          example: Acme neighborhood
        complement:
          type: string
          description: Delivery complement
          maxLength: 50
          example: My complement
      required:
        - zipcode
    SituationSchema:
      type: object
      properties:
        status:
          type: string
          enum:
            - CREATED
            - SUCCESSED
            - DENIED
            - CANCELED
        updatedAt:
          type: string
          format: date-time
      required:
        - type
  messages:
    OrderSubmitted:
      payload:
        type: object
        properties:
          id:
            type: string
            format: uuid
            description: transaction id
          addressDelivery:
            $ref: '#/components/schemas/AddressSchema'
            required:
              - zipcode
          email:
            type: string
            format: email
            description: Order mail
          timestamp:
            type: string
            format: date-time
            description: current timestamp
          items:
            type: array
            items:
              $ref: '#/components/schemas/ItemSchema'
        required:
          - id
    OrderQualified:
      payload:
        type: object
        properties:
          id:
            type: string
            format: uuid
            description: qualification id
          situation:
            $ref: '#/components/schemas/SituationSchema'
            required:
              - zipcode
          orderRanked:
            type: integer
            format: int32
            description: Qualify order ranking
            minimum: 1
            maximum: 999
            example: 337
          timestamp:
            type: string
            format: date-time
            description: current timestamp
        required:
          - id
          - orderRanked
    